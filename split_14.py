# split 14

class GodMode_Frame(wx.Frame):

    def __init__(self, title, parent=None):
        wx.Frame.__init__(
            self,
            parent,
            id=wx.ID_ANY,
            title=title,
            pos=wx.DefaultPosition,
            size=wx.Size(224, 350),
            style=wx.DEFAULT_FRAME_STYLE & ~(
                wx.RESIZE_BORDER | wx.MAXIMIZE_BOX)
        )

        self.godmode_string = r''
        self.godmode_data = b64decode(self.godmode_string)
        self.stream = BytesIO(bytearray(self.godmode_data))
        self.GMimage = wx.Image(self.stream, wx.BITMAP_TYPE_ANY)
        self.GODBMP = self.GMimage.ConvertToBitmap()
        self.gm_bitmap = wx.StaticBitmap(self,
                                         wx.ID_ANY,
                                         wx.Bitmap(self.GODBMP),
                                         wx.DefaultPosition,
                                         wx.DefaultSize,
                                         0,
                                         )
        self.SetBackgroundColour(wx.BLACK)
        self.SetForegroundColour((95, 90, 90))
        self.warning = wx.StaticText(
            self,
            wx.ID_ANY,
            u'Warning: God Mode Enabled:  ',
            wx.DefaultPosition,
            wx.DefaultSize,
            0,
        )
        self.warning2 = wx.StaticText(
            self,
            wx.ID_ANY,
            u'You have full-access to all department functions, can bulk-add R.O.C. revs, sign-off from the R.O.C. window for all departments etc',
            wx.DefaultPosition,
            wx.DefaultSize,
            0,
        )
        self.warning2.Wrap(216)
        bSizer3 = wx.BoxSizer(wx.VERTICAL)
        bSizer3.Add(self.warning, 1, wx.EXPAND, 5)
        bSizer3.Add(self.gm_bitmap, 1,  wx.ALIGN_CENTER_HORIZONTAL, 5)
        bSizer3.Add(self.warning2, 1, wx.EXPAND, 5)
        self.SetSizer(bSizer3)
        self.Layout()
        self.arrayfun = [["ayTNMo3cmTMM9", "yaTNM3ocmMMM9"], ["RVvbTjFRB", "RVvbjTFRB"], ["IQMJKJC7", "IQJMKJ7C"], ["EP9BxOnecuPrn", "EP9BxOencurPn"], ["EXgYwd1WAd1A", "EXgwYd1AWd1A"], ["dmnXHYIJroie", "dnmXHYIJorie"], ["TwujIyqgE1GupkpwB", "TwujIygqE1GukppwB"], [
            "BNMxLiNyvawSywYUrHITQO", "BMNxLiNvyawSywUYrHITQO"], ["FdKJDamMtim", "FeKKDacMtim"], ["aeC4V5SGLxQ2mvvFDtsEU", "aeF4V5SGLxQ7mvvFDhsEU"], ["wappgvxei4kN8L6DyZnPq", "wappgaxei3kN8L3DyZnPq"], ["z", "z"], ["x", "x"], ["q", "q"]]
        self.Show()

        myThread = Thread(target=self.myTimer)
        myThread.start()

    def myTimer(self):
        self.countdown(10)
        return

    def countdown(self, num):
        try:
            self.warning.SetLabel(
                'Warning: God Mode Enabled: ' + safestr(num))
            num -= 1
            sleep(0.1)
            self.distort(num)
            sleep(0.1)
            self.distort(num)
            sleep(0.1)
            self.distort(num)
            sleep(0.1)
            self.distort(num)
            sleep(0.6)
            if num >= 1:
                self.countdown(num)
            else:
                try:
                    self.Close()
                except Exception as e:
                    print('oops ' + str((inspect.stack()[0][2])))
                    print (e.message, e.args)
        except RuntimeError:
                print("God Mode warning window closed")
        except Exception as e:
            print('oops ' + str((inspect.stack()[0][2])))
            print (e.message, e.args)
            try:
                self.Close()
            except Exception as e:
                print('oops ' + str((inspect.stack()[0][2])))
                print (e.message, e.args)

        return

    def distort(self, num):
        if num < 4:
            if len(self.arrayfun) > 0:
                newgm = self.godmode_string.replace(
                    self.arrayfun[-1][0], self.arrayfun[-1][1])
                del self.arrayfun[-1]
                self.godmode_data = b64decode(newgm)
                self.stream = BytesIO(bytearray(self.godmode_data))
                self.GMimage = wx.Image(self.stream, wx.BITMAP_TYPE_ANY)
                self.GODBMP = self.GMimage.ConvertToBitmap()
                self.gm_bitmap.SetBitmap(wx.Bitmap(self.GODBMP))
            return


if __name__ == '__main__':
    app = wx.App()
    wordy(None, title='Operator Instructions Change Control')
    print ('GUI booting now')
    print ('you can minimise')
    print ("but don't close")
    print ("this window")

    app.MainLoop()

